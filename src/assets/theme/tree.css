.p-tree {
  border: 1px solid var(--surface-d);
  background: var(--surface-a);
  color: var(--text-color);
  padding: 1.25rem;
  border-radius: var(--border-radius);
}

.p-tree .p-tree-container .p-treenode {
  padding: 0.143rem;
  outline: 0 none;
}

.p-tree .p-tree-container .p-treenode:focus > .p-treenode-content {
  outline: 0 none;
  outline-offset: 0;
  box-shadow: inset 0 0 0 0.15rem var(--primary-50);
}

.p-tree .p-tree-container .p-treenode .p-treenode-content {
  border-radius: var(--border-radius);
  transition: box-shadow 0.2s;
  padding: 0.5rem;
}

.p-tree .p-tree-container .p-treenode .p-treenode-content .p-tree-toggler {
  margin-right: 0.5rem;
  width: 2rem;
  height: 2rem;
  color: var(--text-color-secondary);
  border: 0 none;
  background: transparent;
  border-radius: 50%;
  transition: background-color 0.2s, color 0.2s, box-shadow 0.2s;
}

.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content
  .p-tree-toggler:enabled:hover {
  color: var(--gray-700);
  border-color: transparent;
  background: var(--surface-c);
}

.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content
  .p-tree-toggler:focus-visible {
  outline: 0 none;
  outline-offset: 0;
}

.p-tree .p-tree-container .p-treenode .p-treenode-content .p-treenode-icon {
  margin-right: 0.5rem;
  color: var(--text-color-secondary);
}

.p-tree .p-tree-container .p-treenode .p-treenode-content .p-checkbox {
  margin-right: 0.5rem;
}

.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content
  .p-checkbox
  .p-indeterminate
  .p-checkbox-icon {
  color: var(--text-color);
}

.p-tree .p-tree-container .p-treenode .p-treenode-content.p-highlight {
  background: var(--highlight-bg);
  color: var(--highlight-text-color);
}

.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content.p-highlight
  .p-tree-toggler,
.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content.p-highlight
  .p-treenode-icon {
  color: var(--highlight-text-color);
}

.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content.p-highlight
  .p-tree-toggler:hover,
.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content.p-highlight
  .p-treenode-icon:hover {
  color: var(--highlight-text-color);
}

.p-tree
  .p-tree-container
  .p-treenode
  .p-treenode-content.p-treenode-selectable:not(.p-highlight):hover {
  background: var(--surface-c);
  color: var(--text-color);
}

.p-tree .p-tree-container .p-treenode .p-treenode-content.p-treenode-dragover {
  background: var(--surface-c);
  color: var(--text-color);
}

.p-tree .p-tree-filter-container {
  margin-bottom: 0.5rem;
}

.p-tree .p-tree-filter-container .p-tree-filter {
  width: 100%;
  padding-right: 1.75rem;
}

.p-tree .p-tree-filter-container .p-tree-filter-icon {
  right: 0.75rem;
  color: var(--text-color-secondary);
}

.p-tree .p-treenode-children {
  padding: 0 0 0 1rem;
}

.p-tree .p-tree-loading-icon {
  font-size: 2rem;
}

.p-tree .p-tree-loading-icon.p-icon {
  width: 2rem;
  height: 2rem;
}

.p-tree .p-treenode-droppoint.p-treenode-droppoint-active {
  background-color: var(--red-200);
}

.p-tree.p-tree-horizontal .p-treenode .p-treenode-content {
  border-radius: var(--border-radius);
  border: 1px solid var(--surface-d);
  background-color: var(--surface-a);
  color: var(--text-color);
  padding: 0.5rem;
  transition: box-shadow 0.2s;
}

.p-tree.p-tree-horizontal .p-treenode .p-treenode-content.p-highlight {
  background-color: var(--highlight-bg);
  color: var(--highlight-text-color);
}

.p-tree.p-tree-horizontal
  .p-treenode
  .p-treenode-content.p-highlight
  .p-treenode-icon {
  color: var(--highlight-text-color);
}

.p-tree.p-tree-horizontal .p-treenode .p-treenode-content .p-tree-toggler {
  margin-right: 0.5rem;
}

.p-tree.p-tree-horizontal .p-treenode .p-treenode-content .p-treenode-icon {
  color: var(--text-color-secondary);
  margin-right: 0.5rem;
}

.p-tree.p-tree-horizontal .p-treenode .p-treenode-content .p-checkbox {
  margin-right: 0.5rem;
}

.p-tree.p-tree-horizontal
  .p-treenode
  .p-treenode-content
  .p-treenode-label:not(.p-highlight):hover {
  background-color: inherit;
  color: inherit;
}

.p-tree.p-tree-horizontal
  .p-treenode
  .p-treenode-content.p-treenode-selectable:not(.p-highlight):hover {
  background: var(--surface-c);
  color: var(--text-color);
}

.p-tree.p-tree-horizontal .p-treenode .p-treenode-content:focus {
  outline: 0 none;
  outline-offset: 0;
}
